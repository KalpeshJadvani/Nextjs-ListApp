import React, { useEffect, useReducer, useMemo } from 'react';
import Head from 'next/head';
import Card from '../../components/Card';
import styles from '../../styles/Home.module.css';
import { reducer } from '../../reducer';
import { ItemModel, InitialState } from './Home.module';

const initialState: InitialState = {
  results: [],
  query: '',
  totalItems: 0,
  startIndex: -1,
  totalPage: 0,
  page: 1
};

export default function Home() {
  const [state, dispatch] = useReducer(reducer, initialState);
  useEffect(() => {
    fetch('https://api.spacexdata.com/v3/launches')
      .then(res => res.json())
      .then(res => {
        dispatch({
          type: 'UPDATE',
          results: res,
          totalItems: res.length
        });
      })
      .catch(err => {
        console.log('Error in network', err);
      });
  }, []);

  const nextPage = () => {
    const { page, totalPage } = state;
    dispatch({ type: 'PAGINATION', page: page + 1 <= totalPage ? page + 1 : page });
  };

  const prevPage = () => {
    const { page } = state;
    dispatch({ type: 'PAGINATION', page: page - 1 >= 1 ? page - 1 : page });
  };

  const getList = () => {
    const { startIndex, results } = state;
    return results.slice(startIndex, startIndex + 10) || []; // if something goes wrong so error will handle by blank array
  };

  // eslint-disable-next-line react-hooks/exhaustive-deps
  const list = useMemo<ItemModel[]>(() => getList(), [state.startIndex]);

  const getGridCardList = () => {
    return list.map((item, index) => {
      return <Card key={item.launch_date_unix + '' + index} item={item} />;
    });
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>List App</title>
        <meta name='description' content='Generated by List app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <div className={styles.grid}>{getGridCardList()}</div>
      </main>

      <footer className={styles.footer}>
        <button className={styles.prev} onClick={prevPage}>
          Prev
        </button>
        <button className={styles.next} onClick={nextPage}>
          Next
        </button>
      </footer>
    </div>
  );
}
